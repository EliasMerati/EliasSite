// <auto-generated />
using System;
using Elias.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Elias.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240513173147_newinit7")]
    partial class newinit7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Elias.Data.Entities.Blog.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BlogDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlogGroup")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("BlogImage")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BlogShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogSubject")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BlogGroup");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Elias.Data.Entities.Blog.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogComments");
                });

            modelBuilder.Entity("Elias.Data.Entities.Blog.BlogGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlogGroupName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BlogGroups");
                });

            modelBuilder.Entity("Elias.Data.Entities.Certificate.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificateDate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CertificateID")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CertificateImage")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CertificateName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("Elias.Data.Entities.Comment.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Elias.Data.Entities.Education.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationCertificate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Since")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Elias.Data.Entities.Experience.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ExperienceDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExperienceSubject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("Elias.Data.Entities.Permission.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4839),
                            PermissionTitle = "صفحه ی اصلی "
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4842),
                            ParentId = 1,
                            PermissionTitle = "کاربران"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4845),
                            ParentId = 2,
                            PermissionTitle = "خروج"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4847),
                            ParentId = 2,
                            PermissionTitle = "تغییر پسورد"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4849),
                            ParentId = 2,
                            PermissionTitle = "ایجاد کاربر"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4850),
                            ParentId = 2,
                            PermissionTitle = "ویرایش کاربر"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4852),
                            ParentId = 1,
                            PermissionTitle = "گروه مهارت"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4854),
                            ParentId = 7,
                            PermissionTitle = "ایجاد گروه مهارت"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4856),
                            ParentId = 7,
                            PermissionTitle = "ویرایش گروه مهارت"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4858),
                            ParentId = 1,
                            PermissionTitle = "مهارت"
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4860),
                            ParentId = 10,
                            PermissionTitle = " ایجاد مهارت"
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4862),
                            ParentId = 10,
                            PermissionTitle = "ویرایش مهارت"
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4863),
                            ParentId = 10,
                            PermissionTitle = "حذف مهارت"
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4865),
                            ParentId = 1,
                            PermissionTitle = "تحصیلات"
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4867),
                            ParentId = 14,
                            PermissionTitle = "ایجاد تحصیلات"
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4869),
                            ParentId = 14,
                            PermissionTitle = "ویرایش تحصیلات"
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4871),
                            ParentId = 14,
                            PermissionTitle = "حذف تحصیلات"
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4873),
                            ParentId = 1,
                            PermissionTitle = "تجربیات"
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4875),
                            ParentId = 18,
                            PermissionTitle = "ایجاد تجربه"
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4877),
                            ParentId = 18,
                            PermissionTitle = "ویرایش تجربه"
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4879),
                            ParentId = 18,
                            PermissionTitle = "حذف تجربه"
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4880),
                            ParentId = 1,
                            PermissionTitle = "مدارک"
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4882),
                            ParentId = 22,
                            PermissionTitle = "ایجاد مدرک"
                        },
                        new
                        {
                            Id = 24,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4884),
                            ParentId = 22,
                            PermissionTitle = "ویرایش مدرک"
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4886),
                            ParentId = 22,
                            PermissionTitle = "حذف مدرک"
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4888),
                            ParentId = 1,
                            PermissionTitle = "گروه نمونه کارها "
                        },
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4890),
                            ParentId = 26,
                            PermissionTitle = "ایجاد گروه نمونه کار"
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4891),
                            ParentId = 26,
                            PermissionTitle = "ویرایش گروه نمونه کار"
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4893),
                            ParentId = 26,
                            PermissionTitle = "حذف گروه نمونه کار"
                        },
                        new
                        {
                            Id = 30,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4895),
                            ParentId = 1,
                            PermissionTitle = "نمونه کار"
                        },
                        new
                        {
                            Id = 31,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4897),
                            ParentId = 30,
                            PermissionTitle = "ایجاد نمونه کار"
                        },
                        new
                        {
                            Id = 32,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4899),
                            ParentId = 30,
                            PermissionTitle = "ویرایش نمونه کار"
                        },
                        new
                        {
                            Id = 33,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4900),
                            ParentId = 30,
                            PermissionTitle = "حذف نمونه کار"
                        },
                        new
                        {
                            Id = 34,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4902),
                            ParentId = 1,
                            PermissionTitle = "گروه بلاگ"
                        },
                        new
                        {
                            Id = 35,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4904),
                            ParentId = 34,
                            PermissionTitle = "ایجاد گروه بلاگ"
                        },
                        new
                        {
                            Id = 36,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4906),
                            ParentId = 34,
                            PermissionTitle = "ویرایش گروه بلاگ"
                        },
                        new
                        {
                            Id = 37,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4908),
                            ParentId = 34,
                            PermissionTitle = "حذف گروه بلاگ"
                        },
                        new
                        {
                            Id = 38,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4910),
                            ParentId = 1,
                            PermissionTitle = "بلاگ"
                        },
                        new
                        {
                            Id = 39,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4911),
                            ParentId = 38,
                            PermissionTitle = "ایجاد بلاگ"
                        },
                        new
                        {
                            Id = 40,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4913),
                            ParentId = 38,
                            PermissionTitle = "ویرایش بلاگ"
                        },
                        new
                        {
                            Id = 41,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4915),
                            ParentId = 38,
                            PermissionTitle = "حذف بلاگ"
                        },
                        new
                        {
                            Id = 42,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4917),
                            ParentId = 1,
                            PermissionTitle = "پیام های من"
                        },
                        new
                        {
                            Id = 43,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4919),
                            ParentId = 42,
                            PermissionTitle = "پاسخ پیام"
                        },
                        new
                        {
                            Id = 44,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4921),
                            ParentId = 42,
                            PermissionTitle = "حذف پیام"
                        });
                });

            modelBuilder.Entity("Elias.Data.Entities.Permission.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4620),
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4623),
                            PermissionId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4625),
                            PermissionId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4627),
                            PermissionId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4628),
                            PermissionId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4630),
                            PermissionId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4633),
                            PermissionId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4635),
                            PermissionId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4637),
                            PermissionId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4639),
                            PermissionId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4641),
                            PermissionId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4643),
                            PermissionId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4644),
                            PermissionId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4646),
                            PermissionId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4648),
                            PermissionId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4707),
                            PermissionId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4709),
                            PermissionId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4711),
                            PermissionId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4713),
                            PermissionId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4716),
                            PermissionId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4718),
                            PermissionId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4719),
                            PermissionId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4722),
                            PermissionId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4724),
                            PermissionId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4727),
                            PermissionId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4728),
                            PermissionId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4730),
                            PermissionId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4732),
                            PermissionId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4734),
                            PermissionId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4736),
                            PermissionId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4738),
                            PermissionId = 31,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 32,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4740),
                            PermissionId = 32,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 33,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4743),
                            PermissionId = 33,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 34,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4745),
                            PermissionId = 34,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 35,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4747),
                            PermissionId = 35,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 36,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4749),
                            PermissionId = 36,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 37,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4751),
                            PermissionId = 37,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 38,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4752),
                            PermissionId = 38,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 39,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4754),
                            PermissionId = 39,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 40,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4756),
                            PermissionId = 40,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 41,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4758),
                            PermissionId = 41,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 42,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4759),
                            PermissionId = 42,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 43,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4761),
                            PermissionId = 43,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 44,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4763),
                            PermissionId = 44,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("MainPicure")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PortfolioDate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PortfolioFamily")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PortfolioLink")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.PortfolioGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("PortfolioGroups");
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.PortfolioImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<string>("PortfolioImageName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioImages");
                });

            modelBuilder.Entity("Elias.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4482),
                            RoleTitle = "Admin"
                        });
                });

            modelBuilder.Entity("Elias.Data.Entities.Skills.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SkillGroupId")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SkillValue")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillGroupId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Elias.Data.Entities.Skills.SkillGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkillGroupName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("SkillGroups");
                });

            modelBuilder.Entity("Elias.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthDay")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Familly")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("GitHub")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedIn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MainDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainSkill")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Ostan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Resumeh")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skype")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserImage")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "خیابان امیر کبیر - امیر کبیر 9/5 - پلاک 141",
                            BirthDay = "1362/06/30",
                            City = "نیشابور",
                            CreateDate = new DateTime(2024, 5, 13, 22, 1, 46, 264, DateTimeKind.Local).AddTicks(4585),
                            Email = "elias.merati@gmail.com",
                            Familly = "مرآتی",
                            GitHub = "https://github.com/EliasMerati",
                            IsActive = true,
                            LinkedIn = "https://www.linkedin.com/in/elias-merati",
                            MainDescription = "با بیش از 5 سال تجربه در کدنویسی و توسعه ی برنامه های NET. من یک برنامه نویس هوشمند و خلاق هستم.من مسلط به زبان برنامه نویسی #C هستم و توانایی توسعه ی برنامه های تحت وب و دسکتاپ را دارم. من در ایجاد برنامه های کاربردی و کیفیت بالا تخصص دارم و توانایی مشارکت در تیم را به خوبی میدانم. همچنین من با استفاده از فریمورک های مختلفی مانند  ASP .NET MVC,ASP .NET,ASP.NET CORE, ASP.NET RAZORPAGES آشنایی کامل دارم.من متعهد به اهداف شرکت و ارا یه ی راه حل های برتر هستم.",
                            MainSkill = ".Net Developer",
                            Name = "الیاس",
                            Ostan = "خراسان رضوی",
                            Password = "20-2C-B9-62-AC-59-07-5B-96-4B-07-15-2D-23-4B-70",
                            PhoneNumber = "09223610626",
                            RoleId = 1,
                            ShortDescription = "برنامه نویس دات نت با بیش از 5 سال سابقه ی برنامه نویسی وب و دسکتاپ",
                            Skills = "C# , Asp .Net MVC , Asp .Net RazorPages , Asp .Net CoreMVC , Blazor",
                            Skype = "Elias Merati",
                            UserImage = "Null",
                            UserName = "EliasAdmin"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("Elias.Data.Entities.Blog.Blog", b =>
                {
                    b.HasOne("Elias.Data.Entities.Blog.BlogGroup", "Group")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Elias.Data.Entities.Blog.BlogComment", b =>
                {
                    b.HasOne("Elias.Data.Entities.Blog.Blog", "Blog")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Elias.Data.Entities.Permission.Permission", b =>
                {
                    b.HasOne("Elias.Data.Entities.Permission.Permission", null)
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Elias.Data.Entities.Permission.RolePermission", b =>
                {
                    b.HasOne("Elias.Data.Entities.Permission.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elias.Data.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.Portfolio", b =>
                {
                    b.HasOne("Elias.Data.Entities.Portfolio.PortfolioGroup", "PortfolioGroup")
                        .WithMany("Portfolios")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PortfolioGroup");
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.PortfolioImages", b =>
                {
                    b.HasOne("Elias.Data.Entities.Portfolio.Portfolio", "Portfolio")
                        .WithMany("PortfolioImages")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Elias.Data.Entities.Skills.Skill", b =>
                {
                    b.HasOne("Elias.Data.Entities.Skills.SkillGroup", "SkillGroup")
                        .WithMany("Skills")
                        .HasForeignKey("SkillGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillGroup");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Elias.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elias.Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Elias.Data.Entities.Blog.Blog", b =>
                {
                    b.Navigation("BlogComments");
                });

            modelBuilder.Entity("Elias.Data.Entities.Blog.BlogGroup", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("Elias.Data.Entities.Permission.Permission", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.Portfolio", b =>
                {
                    b.Navigation("PortfolioImages");
                });

            modelBuilder.Entity("Elias.Data.Entities.Portfolio.PortfolioGroup", b =>
                {
                    b.Navigation("Portfolios");
                });

            modelBuilder.Entity("Elias.Data.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Elias.Data.Entities.Skills.SkillGroup", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
